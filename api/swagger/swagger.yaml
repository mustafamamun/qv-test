swagger: "2.0"
info:
  version: "0.0.1"
  title: Qvantel test app
# during dev, should point to your local machine
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /catalog/product:
    # binds a127 app logic to a route
    x-swagger-router-controller: catalog
    get:
      description: Returns the products that matches the given query
      # used as the method name of the controller
      operationId: getProduct
      tags: ["catalog"]
      parameters:
        - name: name
          in: query
          description: Full name or partial name of the product
          required: false
          type: string
        - name: _id
          in: query
          description: Id of the product to fetch
          required: false
          type: string
        - name: offset
          in: query
          description: How many to skip
          required: false
          type: integer
        - name: limit
          in: query
          description: How many to fetch
          required: false
          type: integer
        - name: priceRange
          in: query
          description: Unit price of product
          enum:
            - lessThan5
            - from5To10
            - greaterThan10
          type: string
        - name: sort
          in: query
          description: sorting sequence
          enum:
            - name
            - price
          type: string
      responses:
        "200":
          description: Success, product fetching successfull
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetProductResponse"
        "204":
          description: Content not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "400":
          description: Bad Request, generally faulty
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Unauthorized, the requestor doesn't have permissions to see this
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not found, Requested url does not exist
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error, in cases where there are more details e.g. in relation to order management new status codes should be added to this definition. e.g. 531 the operation is not allowed because of thing X.
          schema:
            $ref: "#/definitions/ErrorResponse"
        "501":
          description: Not implemented
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service that this api relies on is not available, this is the case where something goes wrong in the systems that CLM is trying to access
          schema:
            $ref: "#/definitions/ErrorResponse"
        "default":
          description: Undefined error situation, we have to add the properly defined error codes for this.
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Add a product to the inventory
      # used as the method name of the controller
      operationId: addProduct
      tags: ["catalog"]
      parameters:
        - name: productDetails
          in: body
          description: Details of the product to be added
          required: true
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AddProductRequest"
      responses:
        "201":
          description: Success, product successfully added to catalog
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AddProductResponse"
        "204":
          description: Content not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "400":
          description: Bad Request, generally faulty
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Unauthorized, the requestor doesn't have permissions to see this
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not found, Requested url does not exist
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error, in cases where there are more details e.g. in relation to order management new status codes should be added to this definition. e.g. 531 the operation is not allowed because of thing X.
          schema:
            $ref: "#/definitions/ErrorResponse"
        "501":
          description: Not implemented
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service that this api relies on is not available, this is the case where something goes wrong in the systems that CLM is trying to access
          schema:
            $ref: "#/definitions/ErrorResponse"
        "default":
          description: Undefined error situation, we have to add the properly defined error codes for this.
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ErrorResponse"
    put:
      description:  Fully update the product
      # used as the method name of the controller
      operationId: updateProduct
      tags: ["catalog"]
      parameters:
        - name: _id
          in: query
          description: unique id of the product
          required: true
          type: string
        - name: productDetails
          in: body
          description: Details of the product to be added
          required: true
          schema:
            # a pointer to a definition
            $ref: "#/definitions/UpdateProductRequest"
      responses:
        "200":
          description: Success, product successfully updated
          schema:
            # a pointer to a definition
            $ref: "#/definitions/UpdateProductResponse"
        "204":
          description: Content not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "400":
          description: Bad Request, generally faulty
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Unauthorized, the requestor doesn't have permissions to see this
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not found, Requested url does not exist
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error, in cases where there are more details e.g. in relation to order management new status codes should be added to this definition. e.g. 531 the operation is not allowed because of thing X.
          schema:
            $ref: "#/definitions/ErrorResponse"
        "501":
          description: Not implemented
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service that this api relies on is not available, this is the case where something goes wrong in the systems that CLM is trying to access
          schema:
            $ref: "#/definitions/ErrorResponse"
        "default":
          description: Undefined error situation, we have to add the properly defined error codes for this.
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ErrorResponse"
    patch:
      description: Partially update the product
      # used as the method name of the controller
      operationId: updateProductPartially
      tags: ["catalog"]
      parameters:
        - name: _id
          in: query
          description: unique id of the product
          required: true
          type: string
        - name: productDetails
          in: body
          description: Details of the product to be added
          required: true
          schema:
            # a pointer to a definition
            $ref: "#/definitions/UpdateProductPartiallyRequest"
      responses:
        "200":
          description: Success, product successfully updated
          schema:
            # a pointer to a definition
            $ref: "#/definitions/UpdateProductPartiallyResponse"
        "204":
          description: Content not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "400":
          description: Bad Request, generally faulty
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Unauthorized, the requestor doesn't have permissions to see this
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not found, Requested url does not exist
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error, in cases where there are more details e.g. in relation to order management new status codes should be added to this definition. e.g. 531 the operation is not allowed because of thing X.
          schema:
            $ref: "#/definitions/ErrorResponse"
        "501":
          description: Not implemented
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service that this api relies on is not available, this is the case where something goes wrong in the systems that CLM is trying to access
          schema:
            $ref: "#/definitions/ErrorResponse"
        "default":
          description: Undefined error situation, we have to add the properly defined error codes for this.
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Delete product from catalog
      # used as the method name of the controller
      operationId: deleteProduct
      tags: ["catalog"]
      parameters:
        - name: _id
          in: query
          description: unique id of the product
          required: true
          type: string
      responses:
        "200":
          description: Success, product successfully removed
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        "204":
          description: Content not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "400":
          description: Bad Request, generally faulty
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Unauthorized, the requestor doesn't have permissions to see this
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not found, Requested url does not exist
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error, in cases where there are more details e.g. in relation to order management new status codes should be added to this definition. e.g. 531 the operation is not allowed because of thing X.
          schema:
            $ref: "#/definitions/ErrorResponse"
        "501":
          description: Not implemented
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service that this api relies on is not available, this is the case where something goes wrong in the systems that CLM is trying to access
          schema:
            $ref: "#/definitions/ErrorResponse"
        "default":
          description: Undefined error situation, we have to add the properly defined error codes for this.
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ErrorResponse"
  /catalog/item:
    # binds a127 app logic to a route
    x-swagger-router-controller: catalog
    post:
      description: Add more item in the product catalog
      # used as the method name of the controller
      operationId: addItem
      tags: ["catalog"]
      parameters:
        - name: productId
          in: query
          description: unique id of the product
          required: true
          type: string
        - name: itemDetails
          in: body
          description: Details of the product to be added
          required: true
          schema:
            required:
              - quantity
            properties:
              quantity:
                type: integer
      responses:
        "201":
          description: Success, product adding successfull
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        "204":
          description: Content not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "400":
          description: Bad Request, generally faulty
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Unauthorized, the requestor doesn't have permissions to see this
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not found, Requested url does not exist
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error, in cases where there are more details e.g. in relation to order management new status codes should be added to this definition. e.g. 531 the operation is not allowed because of thing X.
          schema:
            $ref: "#/definitions/ErrorResponse"
        "501":
          description: Not implemented
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service that this api relies on is not available, this is the case where something goes wrong in the systems that CLM is trying to access
          schema:
            $ref: "#/definitions/ErrorResponse"
        "default":
          description: Undefined error situation, we have to add the properly defined error codes for this.
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Delete product from the product catalog
      # used as the method name of the controller
      operationId: removeItem
      tags: ["catalog"]
      parameters:
        - name: productId
          in: query
          description: unique id of the product
          required: true
          type: string
        - name: itemDetails
          in: body
          description: Details of the product to be added
          required: true
          schema:
            required:
              - quantity
            properties:
              quantity:
                type: integer
      responses:
        "200":
          description: Success, product removing successfull
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        "204":
          description: Content not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "400":
          description: Bad Request, generally faulty
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Unauthorized, the requestor doesn't have permissions to see this
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not found, Requested url does not exist
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error, in cases where there are more details e.g. in relation to order management new status codes should be added to this definition. e.g. 531 the operation is not allowed because of thing X.
          schema:
            $ref: "#/definitions/ErrorResponse"
        "501":
          description: Not implemented
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service that this api relies on is not available, this is the case where something goes wrong in the systems that CLM is trying to access
          schema:
            $ref: "#/definitions/ErrorResponse"
        "default":
          description: Undefined error situation, we have to add the properly defined error codes for this.
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ErrorResponse"
  /cart/items:
    # binds a127 app logic to a route
    x-swagger-router-controller: cart
    get:
      description: Fetch item from the cart
      # used as the method name of the controller
      operationId: getCartItems
      tags: ["cart"]
      parameters:
        - name: customerId
          in: query
          description: Customer id of the cart holder
          required: true
          type: string
      responses:
        "200":
          description: Success, product fetching successfull
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GetProductFromCartResponse"
        "204":
          description: Content not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "400":
          description: Bad Request, generally faulty
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Unauthorized, the requestor doesn't have permissions to see this
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not found, Requested url does not exist
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error, in cases where there are more details e.g. in relation to order management new status codes should be added to this definition. e.g. 531 the operation is not allowed because of thing X.
          schema:
            $ref: "#/definitions/ErrorResponse"
        "501":
          description: Not implemented
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service that this api relies on is not available, this is the case where something goes wrong in the systems that CLM is trying to access
          schema:
            $ref: "#/definitions/ErrorResponse"
        "default":
          description: Undefined error situation, we have to add the properly defined error codes for this.
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Add a item to the cart
      # used as the method name of the controller
      operationId: addItemToCart
      tags: ["cart"]
      parameters:
        - name: cartDetails
          in: body
          description: Details of the product to be added
          required: true
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AddProductToCartRequest"
      responses:
        "201":
          description: Success, product successfully added to catalog
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AddProductToCartResponse"
        "204":
          description: Content not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "400":
          description: Bad Request, generally faulty
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Unauthorized, the requestor doesn't have permissions to see this
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not found, Requested url does not exist
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error, in cases where there are more details e.g. in relation to order management new status codes should be added to this definition. e.g. 531 the operation is not allowed because of thing X.
          schema:
            $ref: "#/definitions/ErrorResponse"
        "501":
          description: Not implemented
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service that this api relies on is not available, this is the case where something goes wrong in the systems that CLM is trying to access
          schema:
            $ref: "#/definitions/ErrorResponse"
        "default":
          description: Undefined error situation, we have to add the properly defined error codes for this.
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Add a item to the cart
      # used as the method name of the controller
      operationId: updateCartItems
      tags: ["cart"]
      parameters:
        - name: customerId
          in: query
          description: Customer id
          required: true
          type: string
        - name: productDetails
          in: body
          description: Details of the product to be added
          required: true
          schema:
            # a pointer to a definition
            $ref: "#/definitions/UpdateCartRequest"
      responses:
        "200":
          description: Success, product successfully added to catalog
          schema:
            # a pointer to a definition
            $ref: "#/definitions/UpdateCartResponse"
        "204":
          description: Content not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "400":
          description: Bad Request, generally faulty
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Unauthorized, the requestor doesn't have permissions to see this
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not found, Requested url does not exist
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error, in cases where there are more details e.g. in relation to order management new status codes should be added to this definition. e.g. 531 the operation is not allowed because of thing X.
          schema:
            $ref: "#/definitions/ErrorResponse"
        "501":
          description: Not implemented
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service that this api relies on is not available, this is the case where something goes wrong in the systems that CLM is trying to access
          schema:
            $ref: "#/definitions/ErrorResponse"
        "default":
          description: Undefined error situation, we have to add the properly defined error codes for this.
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Delete product from the product catalog
      # used as the method name of the controller
      operationId: removeCartItem
      tags: ["cart"]
      parameters:
        - name: customerId
          in: query
          description: unique id of the customer
          required: true
          type: string
        - name: productId
          in: query
          description: unique id of the product
          required: true
          type: string
        - name: itemDetails
          in: body
          description: Details of the product to be added
          required: true
          schema:
            required:
              - quantity
            properties:
              quantity:
                type: integer
      responses:
        "200":
          description: Success, product removing successfull
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        "204":
          description: Content not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "400":
          description: Bad Request, generally faulty
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Unauthorized, the requestor doesn't have permissions to see this
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not found, Requested url does not exist
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error, in cases where there are more details e.g. in relation to order management new status codes should be added to this definition. e.g. 531 the operation is not allowed because of thing X.
          schema:
            $ref: "#/definitions/ErrorResponse"
        "501":
          description: Not implemented
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service that this api relies on is not available, this is the case where something goes wrong in the systems that CLM is trying to access
          schema:
            $ref: "#/definitions/ErrorResponse"
        "default":
          description: Undefined error situation, we have to add the properly defined error codes for this.
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ErrorResponse"
  /cart/product:
    # binds a127 app logic to a route
    x-swagger-router-controller: cart
    delete:
      description: Delete product from the product catalog
      # used as the method name of the controller
      operationId: removeCartproduct
      tags: ["cart"]
      parameters:
        - name: customerId
          in: query
          description: unique id of the customer
          required: true
          type: string
        - name: productId
          in: query
          description: unique id of the product
          required: true
          type: string
      responses:
        "200":
          description: Success, product removing successfull
          schema:
            # a pointer to a definition
            $ref: "#/definitions/GeneralResponse"
        "204":
          description: Content not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "400":
          description: Bad Request, generally faulty
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Unauthorized, the requestor doesn't have permissions to see this
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Not found, Requested url does not exist
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error, in cases where there are more details e.g. in relation to order management new status codes should be added to this definition. e.g. 531 the operation is not allowed because of thing X.
          schema:
            $ref: "#/definitions/ErrorResponse"
        "501":
          description: Not implemented
          schema:
            $ref: "#/definitions/ErrorResponse"
        "503":
          description: Service that this api relies on is not available, this is the case where something goes wrong in the systems that CLM is trying to access
          schema:
            $ref: "#/definitions/ErrorResponse"
        "default":
          description: Undefined error situation, we have to add the properly defined error codes for this.
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  CartDetails:
    required:
      - customerId
      - products
    properties:
      customerId:
        type: string
      products:
        type: array
        items:
          required:
            - productId
            - quantity
            - unitPrice
          properties:
            productId:
              type: string
            quantity:
              type: integer
            unitPrice:
              type: number
      total:
        type: number
  productDetails:
    required:
      - name
      - unitPrice
      - quantity
      - _id
    properties:
      name:
        type: string
        description: Name of the product
      unitPrice:
        type: number
        description: Per unit price of the product
      quantity:
        type: integer
        description: Available units of the product in the inventory
      _id:
        type: string
        description: Unique product id
  AddProductRequest:
    required:
      - name
      - unitPrice
      - quantity
    properties:
      name:
        type: string
        description: Name of the product
      unitPrice:
        type: number
        description: Per unit price of the product
      quantity:
        type: integer
        description: Available units of the product in the inventory
  AddProductResponse:
    $ref: "#/definitions/productDetails"
  UpdateProductRequest:
    properties:
      name:
        type: string
        description: Name of the product
      unitPrice:
        type: number
        description: Per unit price of the product
      quantity:
        type: integer
        description: Available units of the product in the inventory
  UpdateProductResponse:
    $ref: "#/definitions/productDetails"
  UpdateProductPartiallyRequest:
    properties:
      name:
        type: string
        description: Name of the product
      unitPrice:
        type: number
        description: Per unit price of the product
      quantity:
        type: integer
        description: Available units of the product in the inventory
  UpdateProductPartiallyResponse:
    $ref: "#/definitions/productDetails"
  GetProductResponse:
    properties:
      total:
        type: integer
      count:
        type: integer
      results:
        $ref: "#/definitions/productDetails"
  AddProductToCartRequest:
    properties:
      customerId:
        type: string
        description: id of the Customer
      productId:
        type: string
        description: id of the product
      quantity:
        type: integer
      unitPrice:
        type: number
  AddProductToCartResponse:
    $ref: "#/definitions/CartDetails"
  GetProductFromCartResponse:
    $ref: "#/definitions/CartDetails"
  UpdateCartRequest:
    type: array
    items:
      required:
        - productId
        - quantity
        - unitPrice
      properties:
        productId:
          type: string
        quantity:
          type: integer
        unitPrice:
          type: number
  UpdateCartResponse:
    $ref: "#/definitions/CartDetails"
  GeneralResponse:
    properties:
      message:
        type: string
  ErrorResponse:
    properties:
      message:
        type: string
